name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            setup.py
            pyproject.toml
      - name: Cache virtualenv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('pyproject.toml', 'requirements.txt', 'setup.py') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
      - name: Cache torch & pip wheels (extras)
        id: cache-torch
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/torch
          key: piptorch-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('pyproject.toml', 'requirements.txt', 'setup.py') }}
          restore-keys: |
            piptorch-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
      - name: Show cache key context
        run: |
          echo "Using pip cache based on requirements.txt, setup.py, pyproject.toml"
          echo "Venv cache hit: ${{ steps.cache-venv.outputs.cache-hit }}"
          echo "Torch/pip cache hit: ${{ steps.cache-torch.outputs.cache-hit }}"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ "${{ steps.cache-venv.outputs.cache-hit }}" != 'true' ]; then
            python -m venv .venv
            echo "$GITHUB_WORKSPACE/.venv/bin" >> $GITHUB_PATH
            . .venv/bin/activate
            pip install --upgrade pip
            pip install -e .[dev,chem]
          else
            echo "$GITHUB_WORKSPACE/.venv/bin" >> $GITHUB_PATH
            . .venv/bin/activate
            # Refresh editable install (no deps to save time)
            pip install -e . --no-deps
          fi
      - name: Verify environment
        run: |
          . .venv/bin/activate
          python -V
          pip list | grep -E 'torch|torchani|ruff' || true
      - name: Lint
        run: |
          . .venv/bin/activate
          ruff check .
      - name: Test (LUKE only)
        run: |
          . .venv/bin/activate
          pytest -q --maxfail=1 --disable-warnings tests
      - name: Build (sdist/wheel) smoke
        run: |
          . .venv/bin/activate
          pip install build
          python -m build --sdist --wheel --outdir dist
      - name: Twine check
        run: |
          . .venv/bin/activate
          pip install twine
          twine check dist/*